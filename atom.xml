<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>名字待定</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.signalfire2017.com/"/>
  <updated>2020-06-28T06:58:32.253Z</updated>
  <id>https://blog.signalfire2017.com/</id>
  
  <author>
    <name>signalFire</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>将博客搬至CSDN</title>
    <link href="https://blog.signalfire2017.com/2020/06/28/%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%87%B3CSDN/"/>
    <id>https://blog.signalfire2017.com/2020/06/28/将博客搬至CSDN/</id>
    <published>2020-06-28T06:58:32.000Z</published>
    <updated>2020-06-28T06:58:32.253Z</updated>
    
    <content type="html"><![CDATA[<p>将博客搬至CSDN</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将博客搬至CSDN&lt;/p&gt;

    
    </summary>
    
      <category term="学习" scheme="https://blog.signalfire2017.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="大数据" scheme="https://blog.signalfire2017.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://blog.signalfire2017.com/2020/05/06/%E6%9D%82%E8%AE%B0/arthas%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    <id>https://blog.signalfire2017.com/2020/05/06/杂记/arthas记录一次热部署/</id>
    <published>2020-05-06T03:40:09.845Z</published>
    <updated>2020-05-06T03:40:36.410Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head>
      <title>arthas&#x8BB0;&#x4E00;&#x6B21;&#x70ED;&#x90E8;&#x7F72;&#x4F7F;&#x7528;</title>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      
      <link rel="stylesheet" href="file:///c:\Users\jk\.vscode\extensions\shd101wyy.markdown-preview-enhanced-0.5.3\node_modules\@shd101wyy\mume\dependencies\katex\katex.min.css">
      
      

      
      
      
      
      
      
      

      <style>
      /**
 * prism.js Github theme based on GitHub's theme.
 * @author Sam Clarke
 */
code[class*="language-"],
pre[class*="language-"] {
  color: #333;
  background: none;
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.4;

  -moz-tab-size: 8;
  -o-tab-size: 8;
  tab-size: 8;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
  padding: .8em;
  overflow: auto;
  /* border: 1px solid #ddd; */
  border-radius: 3px;
  /* background: #fff; */
  background: #f5f5f5;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
  white-space: normal;
  background: #f5f5f5;
}

.token.comment,
.token.blockquote {
  color: #969896;
}

.token.cdata {
  color: #183691;
}

.token.doctype,
.token.punctuation,
.token.variable,
.token.macro.property {
  color: #333;
}

.token.operator,
.token.important,
.token.keyword,
.token.rule,
.token.builtin {
  color: #a71d5d;
}

.token.string,
.token.url,
.token.regex,
.token.attr-value {
  color: #183691;
}

.token.property,
.token.number,
.token.boolean,
.token.entity,
.token.atrule,
.token.constant,
.token.symbol,
.token.command,
.token.code {
  color: #0086b3;
}

.token.tag,
.token.selector,
.token.prolog {
  color: #63a35c;
}

.token.function,
.token.namespace,
.token.pseudo-element,
.token.class,
.token.class-name,
.token.pseudo-class,
.token.id,
.token.url-reference .token.variable,
.token.attr-name {
  color: #795da3;
}

.token.entity {
  cursor: help;
}

.token.title,
.token.title .token.punctuation {
  font-weight: bold;
  color: #1d3e81;
}

.token.list {
  color: #ed6a43;
}

.token.inserted {
  background-color: #eaffea;
  color: #55a532;
}

.token.deleted {
  background-color: #ffecec;
  color: #bd2c00;
}

.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}


/* JSON */
.language-json .token.property {
  color: #183691;
}

.language-markup .token.tag .token.punctuation {
  color: #333;
}

/* CSS */
code.language-css,
.language-css .token.function {
  color: #0086b3;
}

/* YAML */
.language-yaml .token.atrule {
  color: #63a35c;
}

code.language-yaml {
  color: #183691;
}

/* Ruby */
.language-ruby .token.function {
  color: #333;
}

/* Markdown */
.language-markdown .token.url {
  color: #795da3;
}

/* Makefile */
.language-makefile .token.symbol {
  color: #795da3;
}

.language-makefile .token.variable {
  color: #183691;
}

.language-makefile .token.builtin {
  color: #0086b3;
}

/* Bash */
.language-bash .token.keyword {
  color: #0086b3;
}

/* highlight */
pre[data-line] {
  position: relative;
  padding: 1em 0 1em 3em;
}
pre[data-line] .line-highlight-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  background-color: transparent;
  display: block;
  width: 100%;
}

pre[data-line] .line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 1em;
  background: hsla(24, 20%, 50%,.08);
  background: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
}

pre[data-line] .line-highlight:before, 
pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-start);
  position: absolute;
  top: .4em;
  left: .6em;
  min-width: 1em;
  padding: 0 .5em;
  background-color: hsla(24, 20%, 50%,.4);
  color: hsl(24, 20%, 95%);
  font: bold 65%/1.5 sans-serif;
  text-align: center;
  vertical-align: .3em;
  border-radius: 999px;
  text-shadow: none;
  box-shadow: 0 1px white;
}

pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-end);
  top: auto;
  bottom: .4em;
}html body{font-family:"Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif;font-size:16px;line-height:1.6;color:#333;background-color:#fff;overflow:initial;box-sizing:border-box;word-wrap:break-word}html body>:first-child{margin-top:0}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{line-height:1.2;margin-top:1em;margin-bottom:16px;color:#000}html body h1{font-size:2.25em;font-weight:300;padding-bottom:.3em}html body h2{font-size:1.75em;font-weight:400;padding-bottom:.3em}html body h3{font-size:1.5em;font-weight:500}html body h4{font-size:1.25em;font-weight:600}html body h5{font-size:1.1em;font-weight:600}html body h6{font-size:1em;font-weight:600}html body h1,html body h2,html body h3,html body h4,html body h5{font-weight:600}html body h5{font-size:1em}html body h6{color:#5c5c5c}html body strong{color:#000}html body del{color:#5c5c5c}html body a:not([href]){color:inherit;text-decoration:none}html body a{color:#08c;text-decoration:none}html body a:hover{color:#00a3f5;text-decoration:none}html body img{max-width:100%}html body>p{margin-top:0;margin-bottom:16px;word-wrap:break-word}html body>ul,html body>ol{margin-bottom:16px}html body ul,html body ol{padding-left:2em}html body ul.no-list,html body ol.no-list{padding:0;list-style-type:none}html body ul ul,html body ul ol,html body ol ol,html body ol ul{margin-top:0;margin-bottom:0}html body li{margin-bottom:0}html body li.task-list-item{list-style:none}html body li>p{margin-top:0;margin-bottom:0}html body .task-list-item-checkbox{margin:0 .2em .25em -1.8em;vertical-align:middle}html body .task-list-item-checkbox:hover{cursor:pointer}html body blockquote{margin:16px 0;font-size:inherit;padding:0 15px;color:#5c5c5c;border-left:4px solid #d6d6d6}html body blockquote>:first-child{margin-top:0}html body blockquote>:last-child{margin-bottom:0}html body hr{height:4px;margin:32px 0;background-color:#d6d6d6;border:0 none}html body table{margin:10px 0 15px 0;border-collapse:collapse;border-spacing:0;display:block;width:100%;overflow:auto;word-break:normal;word-break:keep-all}html body table th{font-weight:bold;color:#000}html body table td,html body table th{border:1px solid #d6d6d6;padding:6px 13px}html body dl{padding:0}html body dl dt{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:bold}html body dl dd{padding:0 16px;margin-bottom:16px}html body code{font-family:Menlo,Monaco,Consolas,'Courier New',monospace;font-size:.85em !important;color:#000;background-color:#f0f0f0;border-radius:3px;padding:.2em 0}html body code::before,html body code::after{letter-spacing:-0.2em;content:"\00a0"}html body pre>code{padding:0;margin:0;font-size:.85em !important;word-break:normal;white-space:pre;background:transparent;border:0}html body .highlight{margin-bottom:16px}html body .highlight pre,html body pre{padding:1em;overflow:auto;font-size:.85em !important;line-height:1.45;border:#d6d6d6;border-radius:3px}html body .highlight pre{margin-bottom:0;word-break:normal}html body pre code,html body pre tt{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}html body pre code:before,html body pre tt:before,html body pre code:after,html body pre tt:after{content:normal}html body p,html body blockquote,html body ul,html body ol,html body dl,html body pre{margin-top:0;margin-bottom:16px}html body kbd{color:#000;border:1px solid #d6d6d6;border-bottom:2px solid #c7c7c7;padding:2px 4px;background-color:#f0f0f0;border-radius:3px}@media print{html body{background-color:#fff}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{color:#000;page-break-after:avoid}html body blockquote{color:#5c5c5c}html body pre{page-break-inside:avoid}html body table{display:table}html body img{display:block;max-width:100%;max-height:100%}html body pre,html body code{word-wrap:break-word;white-space:pre}}.markdown-preview{width:100%;height:100%;box-sizing:border-box}.markdown-preview .pagebreak,.markdown-preview .newpage{page-break-before:always}.markdown-preview pre.line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}.markdown-preview pre.line-numbers>code{position:relative}.markdown-preview pre.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:1em;font-size:100%;left:0;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.markdown-preview pre.line-numbers .line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.markdown-preview pre.line-numbers .line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}.markdown-preview .mathjax-exps .MathJax_Display{text-align:center !important}.markdown-preview:not([for="preview"]) .code-chunk .btn-group{display:none}.markdown-preview:not([for="preview"]) .code-chunk .status{display:none}.markdown-preview:not([for="preview"]) .code-chunk .output-div{margin-bottom:16px}.scrollbar-style::-webkit-scrollbar{width:8px}.scrollbar-style::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}.scrollbar-style::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode]){position:relative;width:100%;height:100%;top:0;left:0;margin:0;padding:0;overflow:auto}html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{position:relative;top:0}@media screen and (min-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em calc(50% - 457px + 2em)}}@media screen and (max-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{font-size:14px !important;padding:1em}}@media print{html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{display:none}}html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{position:fixed;bottom:8px;left:8px;font-size:28px;cursor:pointer;color:inherit;z-index:99;width:32px;text-align:center;opacity:.4}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] #sidebar-toc-btn{opacity:1}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc{position:fixed;top:0;left:0;width:300px;height:100%;padding:32px 0 48px 0;font-size:14px;box-shadow:0 0 4px rgba(150,150,150,0.33);box-sizing:border-box;overflow:auto;background-color:inherit}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar{width:8px}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc a{text-decoration:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{padding:0 1.6em;margin-top:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc li{margin-bottom:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{list-style-type:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{left:300px;width:calc(100% -  300px);padding:2em calc(50% - 457px -  150px);margin:0;box-sizing:border-box}@media screen and (max-width:1274px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{width:100%}}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .markdown-preview{left:50%;transform:translateX(-50%)}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .md-sidebar-toc{display:none}
/* Please visit the URL below for more information: */
/*   https://shd101wyy.github.io/markdown-preview-enhanced/#/customize-css */
.markdown-preview.markdown-preview {
  background-color: #fafafa;
}
.markdown-preview.markdown-preview strong {
  color: red;
  font-size: 22px;
  background-color: transparent;
  font-weight: normal;
}
.markdown-preview.markdown-preview pre {
  background-color: #dce2f1;
}
.markdown-preview.markdown-preview code {
  color: red;
  background-color: transparent;
}
.markdown-preview.markdown-preview pre > code {
  color: black;
}

      </style>
    </head>
    <body for="html-export">
      <div class="mume markdown-preview  ">
      <h1 class="mume-header" id="1-%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8arthas">1. &#x5B89;&#x88C5;&#x542F;&#x52A8;arthas</h1>

<p>&#x53BB;arthas&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#x4E00;&#x4EFD;&#x538B;&#x7F29;&#x5305;</p>
<p>&#x4F20;&#x5230;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x89E3;&#x538B;</p>
<pre data-role="codeBlock" data-info="" class="language-"><code>/data/crm/arthas-arthas-all-3.2.0/bin/as.sh
</code></pre><p>&#x6216;&#x8005;&#x76F4;&#x63A5;&#x4E0B;&#x8F7D;&#x4E2A;jar&#x5305;</p>
<pre data-role="codeBlock" data-info="" class="language-"><code>java -jar arthas-boot.jar
</code></pre><h1 class="mume-header" id="2-%E6%9F%A5%E7%9C%8B%E7%9B%AE%E6%A0%87%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8%E4%BB%A5workspaceactionjava%E4%B8%BA%E4%BE%8B">2. &#x67E5;&#x770B;&#x76EE;&#x6807;&#x7C7B;&#x7684;&#x52A0;&#x8F7D;&#x5668;(&#x4EE5;WorkspaceAction.java&#x4E3A;&#x4F8B;)</h1>

<pre data-role="codeBlock" data-info="" class="language-"><code>sc -d *WorkspaceAction | grep classLoaderHash 
</code></pre><p><img src="image/arthas%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E7%83%AD%E9%83%A8%E7%BD%B2/image-2020-05-06-11-27-35.png" alt="image-2020-05-06-11-27-35.png"></p>
<p>&#x8BB0;&#x5F55;&#x7F16;&#x8BD1;&#x5668;&#x5BF9;&#x8C61;&#x5730;&#x5740; 152f2143</p>
<h1 class="mume-header" id="3-%E5%8F%8D%E7%BC%96%E8%AF%91">3. &#x53CD;&#x7F16;&#x8BD1;</h1>

<p>(&#x7F16;&#x8BD1;,&#x4FEE;&#x6539;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x52A0;&#x8F7D;&#x65F6;&#x5019;&#x6709;&#x95EE;&#x9898;,&#x540E;&#x6765;&#x5728;&#x672C;&#x5730;&#x4FEE;&#x6539;java&#x6587;&#x4EF6;,&#x4F20;&#x4E0A;&#x53BB;&#x52A0;&#x8F7D;&#x7684;)</p>
<pre data-role="codeBlock" data-info="" class="language-"><code>jad --source-only  com.taobao.rigel.rap.workspace.web.action.WorkspaceAction &gt; /tmp/WorkspaceAction.java
</code></pre><h1 class="mume-header" id="4-%E5%B0%86%E4%BF%AE%E6%94%B9%E5%90%8E%E7%9A%84java%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91">4. &#x5C06;&#x4FEE;&#x6539;&#x540E;&#x7684;java&#x6587;&#x4EF6;&#x7F16;&#x8BD1;</h1>

<pre data-role="codeBlock" data-info="" class="language-"><code>mc -c 152f2143 WorkspaceAction.java
</code></pre><p>&#x6307;&#x5B9A;&#x7C7B;&#x52A0;&#x8F7D;,&#x9ED8;&#x8BA4;&#x7684;&#x6267;&#x884C;&#x8DEF;&#x5F84;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x6267;&#x884C;&#x8DEF;&#x5F84;<br>
<img src="image/arthas%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E7%83%AD%E9%83%A8%E7%BD%B2/image-2020-05-06-11-30-51.png" alt="image-2020-05-06-11-30-51.png"></p>
<h1 class="mume-header" id="5-%E5%8A%A0%E8%BD%BDclass%E6%96%87%E4%BB%B6">5. &#x52A0;&#x8F7D;class&#x6587;&#x4EF6;</h1>

<pre data-role="codeBlock" data-info="" class="language-"><code>redefine /data/crm/tomcat-jdk8-rap/bin/com/taobao/rigel/rap/workspace/web/action/WorkspaceAction.class
</code></pre><p><img src="image/arthas%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E7%83%AD%E9%83%A8%E7%BD%B2/image-2020-05-06-11-31-25.png" alt="image-2020-05-06-11-31-25.png"></p>

      </div>
      
      
    
    
    
    
    
    
    
    
  
    </body></html>]]></content>
    
    <summary type="html">
    
      &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;
      &lt;title&gt;arthas&amp;#x8BB0;&amp;#x4E00;&amp;#x6B21;&amp;#x70ED;&amp;#x90E8;&amp;#x7F72;&amp;#x4F7F;&amp;#x7528;&lt;/title&gt;
      &lt;meta charset=
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>flutter开发环境安装</title>
    <link href="https://blog.signalfire2017.com/2019/09/15/flutter%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.signalfire2017.com/2019/09/15/flutter开发环境安装/</id>
    <published>2019-09-15T13:41:36.000Z</published>
    <updated>2019-09-16T01:26:40.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-开发环境安装参考视频"><a href="#1-开发环境安装参考视频" class="headerlink" title="1. 开发环境安装参考视频"></a>1. 开发环境安装参考视频</h2><p><a href="https://www.imooc.com/video/18526" target="_blank" rel="external">https://www.imooc.com/video/18526</a></p>
<h2 id="2-遇到问题"><a href="#2-遇到问题" class="headerlink" title="2. 遇到问题"></a>2. 遇到问题</h2><h3 id="2-1-安装了MuMu模拟器"><a href="#2-1-安装了MuMu模拟器" class="headerlink" title="2.1. 安装了MuMu模拟器"></a>2.1. 安装了MuMu模拟器</h3><p><a href="https://www.cnblogs.com/xuexidememeda/p/9516086.html" target="_blank" rel="external">参考地址</a></p>
<h4 id="2-1-1-添加环境变量"><a href="#2-1-1-添加环境变量" class="headerlink" title="2.1.1. 添加环境变量"></a>2.1.1. 添加环境变量</h4><ul>
<li>进入Android sdk安装环境目录</li>
<li>将 platform-tools 和 emulator 添加到环境变量中<br><img src="http://blogimage.signalfire2017.com/blog/2019-09-15-21-39-28-2019915213929.png?imageMogr2/thumbnail/!100p" alt="2019-09-15-21-39-28-2019915213929"><h4 id="2-1-2-打开模拟器"><a href="#2-1-2-打开模拟器" class="headerlink" title="2.1.2. 打开模拟器"></a>2.1.2. 打开模拟器</h4>cmd中执行<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb connect 127.0.0.1:7555</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-1-3-错误1"><a href="#2-1-3-错误1" class="headerlink" title="2.1.3. 错误1"></a>2.1.3. 错误1</h4><p><a href="https://www.cnblogs.com/yehuabin/p/10344723.html" target="_blank" rel="external">参考地址</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Failed to setup Skia Gr context</div></pre></td></tr></table></figure></p>
<p>flutter Failed to setup Skia Gr context导致白屏<br>添加 –enable-software-rendering 参数运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flutter run --enable-software-rendering</div></pre></td></tr></table></figure></p>
<p>vscode debug需要添加配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    // 使用 IntelliSense 了解相关属性。 </div><div class="line">    // 悬停以查看现有属性的描述。</div><div class="line">    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</div><div class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</div><div class="line">    &quot;configurations&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;name&quot;: &quot;Flutter&quot;,</div><div class="line">            &quot;request&quot;: &quot;launch&quot;,</div><div class="line">            &quot;type&quot;: &quot;dart&quot;,</div><div class="line">            &quot;args&quot;: [&quot;--enable-software-rendering&quot;, &quot;-d&quot;, &quot;all&quot;]</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">![图片](https://img2018.cnblogs.com/blog/82061/201902/82061-20190201084328506-453598747.png)</div></pre></td></tr></table></figure></p>
<p>idea开发在后面加上这个参数就行了</p>
<h4 id="2-1-4-注意模拟器中usb调试开启-调试程序设置"><a href="#2-1-4-注意模拟器中usb调试开启-调试程序设置" class="headerlink" title="2.1.4. 注意模拟器中usb调试开启 调试程序设置"></a>2.1.4. 注意模拟器中usb调试开启 调试程序设置</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-开发环境安装参考视频&quot;&gt;&lt;a href=&quot;#1-开发环境安装参考视频&quot; class=&quot;headerlink&quot; title=&quot;1. 开发环境安装参考视频&quot;&gt;&lt;/a&gt;1. 开发环境安装参考视频&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.imooc.c
    
    </summary>
    
      <category term="flutter" scheme="https://blog.signalfire2017.com/categories/flutter/"/>
    
    
      <category term="flutter" scheme="https://blog.signalfire2017.com/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>git命令简写</title>
    <link href="https://blog.signalfire2017.com/2019/09/15/git%E5%91%BD%E4%BB%A4%E7%AE%80%E5%86%99/"/>
    <id>https://blog.signalfire2017.com/2019/09/15/git命令简写/</id>
    <published>2019-09-15T12:24:40.000Z</published>
    <updated>2019-09-16T01:26:40.733Z</updated>
    
    <content type="html"><![CDATA[<p>简单记录 git 设置简写</p>
<a id="more"></a>
<h2 id="1-方法一-git文件修改设置简写命令"><a href="#1-方法一-git文件修改设置简写命令" class="headerlink" title="1. 方法一:git文件修改设置简写命令"></a>1. 方法一:git文件修改设置简写命令</h2><p>修改~/.gitconfig文件</p>
<p>添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[alias]</div><div class="line">c = checkout </div><div class="line">st = status</div><div class="line">cm = commit -m</div><div class="line">br = branch</div></pre></td></tr></table></figure></p>
<h2 id="2-方法二-修改windows文件设置简写"><a href="#2-方法二-修改windows文件设置简写" class="headerlink" title="2. 方法二:修改windows文件设置简写"></a>2. 方法二:修改windows文件设置简写</h2><ol>
<li>新建 ~/.bashrc文件</li>
<li><p>编辑文档</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">alias ga=&apos;git add&apos;</div><div class="line">alias gaa=&apos;git add --all&apos;</div><div class="line">alias gapa=&apos;git add --patch&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>保存并source ~/.bashrc即可</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单记录 git 设置简写&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://blog.signalfire2017.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="git" scheme="https://blog.signalfire2017.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git中文编码问题</title>
    <link href="https://blog.signalfire2017.com/2019/09/15/git%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.signalfire2017.com/2019/09/15/git中文编码问题/</id>
    <published>2019-09-15T12:24:10.000Z</published>
    <updated>2019-09-16T01:26:40.667Z</updated>
    
    <content type="html"><![CDATA[<p>git中文编码问题解决<br><a id="more"></a><br>这个问题是由于git默认会被utf-8文件名进行转码，需要设置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global core.quotepath <span class="literal">false</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git中文编码问题解决&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="https://blog.signalfire2017.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="git" scheme="https://blog.signalfire2017.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>单元测试-easyMock</title>
    <link href="https://blog.signalfire2017.com/2019/09/12/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95-easyMock/"/>
    <id>https://blog.signalfire2017.com/2019/09/12/单元测试-easyMock/</id>
    <published>2019-09-12T08:26:04.000Z</published>
    <updated>2019-09-12T08:33:46.431Z</updated>
    
    <content type="html"><![CDATA[<p>easyMock简单使用<br><a id="more"></a></p>
<h2 id="1-引入pom-xml依赖"><a href="#1-引入pom-xml依赖" class="headerlink" title="1. 引入pom.xml依赖"></a>1. 引入pom.xml依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.easymock/easymock --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.easymock<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easymock<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.powermock<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>powermock-api-easymock<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.powermock<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>powermock-module-junit4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- https://mvnrepository.com/artifact/cglib/cglib-nodep --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib-nodep<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="2-代码"><a href="#2-代码" class="headerlink" title="2. 代码"></a>2. 代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cn.huibo.service.impl.ReceivevMessageParserImpl;</div><div class="line"><span class="keyword">import</span> cn.jkcrm.person.service.WechatPNBindService;</div><div class="line"><span class="keyword">import</span> org.easymock.EasyMock;</div><div class="line"><span class="keyword">import</span> org.junit.Test;</div><div class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</div><div class="line"><span class="keyword">import</span> org.powermock.api.easymock.PowerMock;</div><div class="line"><span class="keyword">import</span> org.powermock.core.classloader.annotations.PrepareForTest;</div><div class="line"><span class="keyword">import</span> org.powermock.modules.junit4.PowerMockRunner;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.BufferedReader;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileReader;</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@RunWith</span>(PowerMockRunner.class)</div><div class="line"><span class="meta">@PrepareForTest</span>(&#123;WechatPNBindService.class&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMessage</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span><span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">        PowerMock.mockStatic(WechatPNBindService.class);</div><div class="line"></div><div class="line">        EasyMock.expect(WechatPNBindService.getShopNickByWxId(EasyMock.isA(String.class)))</div><div class="line">                .andReturn(<span class="string">"wxafdsadf"</span>)</div><div class="line">                .anyTimes();</div><div class="line"></div><div class="line">        PowerMock.replayAll();</div><div class="line"></div><div class="line">        ReceivevMessageParserImpl parser = <span class="keyword">new</span> ReceivevMessageParserImpl();</div><div class="line"></div><div class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(</div><div class="line">                <span class="keyword">new</span> FileReader(<span class="keyword">new</span> File(<span class="string">"E:\\hb-workspace\\Wechart-app-consumer\\test\\message"</span>)));</div><div class="line"></div><div class="line">        parser.doExecute(reader.readLine());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><p><a href="https://blog.csdn.net/chjttony/article/details/14522771" target="_blank" rel="external">有效使用easyMock编写java单元测试</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;easyMock简单使用&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="https://blog.signalfire2017.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="java" scheme="https://blog.signalfire2017.com/tags/java/"/>
    
      <category term="mock" scheme="https://blog.signalfire2017.com/tags/mock/"/>
    
      <category term="easyMock" scheme="https://blog.signalfire2017.com/tags/easyMock/"/>
    
  </entry>
  
  <entry>
    <title>idea getter setter 模板设置</title>
    <link href="https://blog.signalfire2017.com/2019/04/03/%E6%9D%82%E8%AE%B0/idea/idea-setter-getter-%E6%A8%A1%E6%9D%BF%E8%AE%BE%E7%BD%AE/"/>
    <id>https://blog.signalfire2017.com/2019/04/03/杂记/idea/idea-setter-getter-模板设置/</id>
    <published>2019-04-03T06:19:03.000Z</published>
    <updated>2019-04-03T06:25:23.309Z</updated>
    
    <content type="html"><![CDATA[<p>设置<br><img src="http://blogimage.signalfire2017.com/image/work/idea-md-20194314812.png?imageMogr2/thumbnail/!100p" alt="idea-md-20194314812"></p>
<p>getter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#if($field.modifierStatic)</div><div class="line">static ##</div><div class="line">#end</div><div class="line">$field.type ##</div><div class="line">#set($name = $StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($helper.getPropertyName($field, $project))))</div><div class="line">get$&#123;name&#125;() &#123;</div><div class="line">    return $field.name;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>setter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">#set($paramName = $helper.getParamName($field, $project))</div><div class="line">public ##</div><div class="line">#if($field.modifierStatic)</div><div class="line">static void ##</div><div class="line">#else</div><div class="line">  $classSignature ##</div><div class="line">#end</div><div class="line">set$StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($helper.getPropertyName($field, $project)))($field.type $paramName) &#123;</div><div class="line">#if ($field.name == $paramName)</div><div class="line">  #if (!$field.modifierStatic)</div><div class="line">  this.##</div><div class="line">  #else</div><div class="line">    $classname.##</div><div class="line">  #end</div><div class="line">#end</div><div class="line">$field.name = $paramName;</div><div class="line">#if(!$field.modifierStatic)</div><div class="line">return this;</div><div class="line">#end</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设置&lt;br&gt;&lt;img src=&quot;http://blogimage.signalfire2017.com/image/work/idea-md-20194314812.png?imageMogr2/thumbnail/!100p&quot; alt=&quot;idea-md-201943148
    
    </summary>
    
      <category term="idea" scheme="https://blog.signalfire2017.com/categories/idea/"/>
    
    
      <category term="idea" scheme="https://blog.signalfire2017.com/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>log4j打印sql语句和参数</title>
    <link href="https://blog.signalfire2017.com/2019/03/13/%E6%9D%82%E8%AE%B0/log4j%E6%89%93%E5%8D%B0sql%E8%AF%AD%E5%8F%A5%E5%92%8C%E5%8F%82%E6%95%B0/"/>
    <id>https://blog.signalfire2017.com/2019/03/13/杂记/log4j打印sql语句和参数/</id>
    <published>2019-03-13T04:10:00.000Z</published>
    <updated>2019-03-13T10:21:16.963Z</updated>
    
    <content type="html"><![CDATA[<p>在配置文件中加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">log4j.logger.org.springframework.jdbc=debug</div><div class="line">log4j.logger.org.springframework.jdbc.core.StatementCreatorUtils=TRACE</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在配置文件中加入&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/
    
    </summary>
    
      <category term="杂记" scheme="https://blog.signalfire2017.com/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="日志" scheme="https://blog.signalfire2017.com/tags/%E6%97%A5%E5%BF%97/"/>
    
      <category term="log4j" scheme="https://blog.signalfire2017.com/tags/log4j/"/>
    
  </entry>
  
  <entry>
    <title>arthas记一次热部署使用</title>
    <link href="https://blog.signalfire2017.com/2019/02/16/%E6%9D%82%E8%AE%B0/arthas%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    <id>https://blog.signalfire2017.com/2019/02/16/杂记/arthas记录一次热部署/</id>
    <published>2019-02-16T04:10:00.000Z</published>
    <updated>2020-05-06T03:40:31.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装启动arthas"><a href="#1-安装启动arthas" class="headerlink" title="1. 安装启动arthas"></a>1. 安装启动arthas</h1><p>去arthas官网下载一份压缩包</p>
<p>传到服务器上解压</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/data/crm/arthas-arthas-all-3.2.0/bin/as.sh</div></pre></td></tr></table></figure>
<p>或者直接下载个jar包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -jar arthas-boot.jar</div></pre></td></tr></table></figure>
<h1 id="2-查看目标类的加载器-以WorkspaceAction-java为例"><a href="#2-查看目标类的加载器-以WorkspaceAction-java为例" class="headerlink" title="2. 查看目标类的加载器(以WorkspaceAction.java为例)"></a>2. 查看目标类的加载器(以WorkspaceAction.java为例)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sc -d *WorkspaceAction | grep classLoaderHash</div></pre></td></tr></table></figure>
<p><img src="image/arthas记录一次热部署/image-2020-05-06-11-27-35.png" alt="image-2020-05-06-11-27-35.png"></p>
<p>记录编译器对象地址 152f2143</p>
<h1 id="3-反编译"><a href="#3-反编译" class="headerlink" title="3. 反编译"></a>3. 反编译</h1><p>(编译,修改后的文件加载时候有问题,后来在本地修改java文件,传上去加载的)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jad --source-only  com.taobao.rigel.rap.workspace.web.action.WorkspaceAction &gt; /tmp/WorkspaceAction.java</div></pre></td></tr></table></figure></p>
<h1 id="4-将修改后的java文件编译"><a href="#4-将修改后的java文件编译" class="headerlink" title="4. 将修改后的java文件编译"></a>4. 将修改后的java文件编译</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mc -c 152f2143 WorkspaceAction.java</div></pre></td></tr></table></figure>
<p>指定类加载,默认的执行路径是对应的程序的执行路径<br><img src="image/arthas记录一次热部署/image-2020-05-06-11-30-51.png" alt="image-2020-05-06-11-30-51.png"></p>
<h1 id="5-加载class文件"><a href="#5-加载class文件" class="headerlink" title="5. 加载class文件"></a>5. 加载class文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redefine /data/crm/tomcat-jdk8-rap/bin/com/taobao/rigel/rap/workspace/web/action/WorkspaceAction.class</div></pre></td></tr></table></figure>
<p><img src="image/arthas记录一次热部署/image-2020-05-06-11-31-25.png" alt="image-2020-05-06-11-31-25.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-安装启动arthas&quot;&gt;&lt;a href=&quot;#1-安装启动arthas&quot; class=&quot;headerlink&quot; title=&quot;1. 安装启动arthas&quot;&gt;&lt;/a&gt;1. 安装启动arthas&lt;/h1&gt;&lt;p&gt;去arthas官网下载一份压缩包&lt;/p&gt;
&lt;p&gt;传到服务
    
    </summary>
    
      <category term="arthas" scheme="https://blog.signalfire2017.com/categories/arthas/"/>
    
    
      <category term="arthas" scheme="https://blog.signalfire2017.com/tags/arthas/"/>
    
  </entry>
  
  <entry>
    <title>禅道安装</title>
    <link href="https://blog.signalfire2017.com/2019/01/16/%E6%9D%82%E8%AE%B0/%E7%A6%85%E9%81%93%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.signalfire2017.com/2019/01/16/杂记/禅道安装/</id>
    <published>2019-01-16T04:10:00.000Z</published>
    <updated>2019-01-16T04:10:28.600Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下禅道安装<br>参考:</p>
<h1 id="禅道官网"><a href="#禅道官网" class="headerlink" title="禅道官网"></a>禅道官网</h1><ul>
<li><a href="https://www.zentao.net/" target="_blank" rel="external">https://www.zentao.net/</a></li>
<li>查找开源版的一键安装包<ul>
<li>Linux<ul>
<li>64位下载：wget <a href="http://dl.cnezsoft.com/zentao/9.0.1/ZenTaoPMS.9.0.1.zbox_64.tar.gz" target="_blank" rel="external">http://dl.cnezsoft.com/zentao/9.0.1/ZenTaoPMS.9.0.1.zbox_64.tar.gz</a></li>
<li>32位下载：wget <a href="http://dl.cnezsoft.com/zentao/9.0.1/ZenTaoPMS.9.0.1.zbox_32.tar.gz" target="_blank" rel="external">http://dl.cnezsoft.com/zentao/9.0.1/ZenTaoPMS.9.0.1.zbox_32.tar.gz</a></li>
</ul>
</li>
</ul>
</li>
<li>下载</li>
<li>安装包中有个readMe</li>
<li>ZBOX是Apache、Mysql、PHP的精简的集成环境。使用时，需要将其解压到/opt目录。</li>
<li>/opt/zbox/zbox -h     可以获取帮助</li>
<li>/opt/zbox/zbox start  启动脚本</li>
<li>Mysql 用户名root，密码为空。</li>
<li>禅道初始账号密码:admin 123456</li>
<li><p>如果磁盘空间不大,可以用软链将其中的文件夹挪到别的位置<br><img src="http://blogimage.signalfire2017.com/image/work/禅道安装-2019116114439.png?imageMogr2/thumbnail/!100p" alt="禅道安装-2019116114439"></p>
</li>
<li><p>开机启动,修改 /etc/rc.d/rc.local 文件 加上启动命令</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一下禅道安装&lt;br&gt;参考:&lt;/p&gt;
&lt;h1 id=&quot;禅道官网&quot;&gt;&lt;a href=&quot;#禅道官网&quot; class=&quot;headerlink&quot; title=&quot;禅道官网&quot;&gt;&lt;/a&gt;禅道官网&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zentao.net/&quot;
    
    </summary>
    
      <category term="工具" scheme="https://blog.signalfire2017.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="禅道" scheme="https://blog.signalfire2017.com/tags/%E7%A6%85%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>大数据0601-hadoop集群搭建</title>
    <link href="https://blog.signalfire2017.com/2018/02/23/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE0601-hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>https://blog.signalfire2017.com/2018/02/23/大数据/大数据0601-hadoop集群搭建/</id>
    <published>2018-02-23T08:08:22.000Z</published>
    <updated>2019-04-03T06:35:26.384Z</updated>
    
    <content type="html"><![CDATA[<p>hadoop集群搭建，分为hdfs集群和yarn集群</p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="http://hadoop.apache.org/" target="_blank" rel="external">http://hadoop.apache.org/</a><br>网站有下载，文档等等</p>
<h1 id="hdfs集群"><a href="#hdfs集群" class="headerlink" title="hdfs集群"></a>hdfs集群</h1><p>负责文件读写</p>
<h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><p>name-node：<br>date-node：</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h1 id="yarn集群"><a href="#yarn集群" class="headerlink" title="yarn集群"></a>yarn集群</h1><p>负责为mapreduce程序分配运行硬件资源</p>
<h2 id="角色-1"><a href="#角色-1" class="headerlink" title="角色"></a>角色</h2><p>resource manager<br>node manager</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hadoop集群搭建，分为hdfs集群和yarn集群&lt;/p&gt;
&lt;h1 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://hadoop.apache.org/&quot; 
    
    </summary>
    
      <category term="大数据学习笔记" scheme="https://blog.signalfire2017.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="大数据" scheme="https://blog.signalfire2017.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="https://blog.signalfire2017.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约-名词.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6-%E5%90%8D%E8%AF%8D/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约-名词/</id>
    <published>2018-02-11T09:59:39.000Z</published>
    <updated>2018-12-21T03:20:31.028Z</updated>
    
    <content type="html"><![CDATA[<h1 id="名词-10"><a href="#名词-10" class="headerlink" title="名词(10)"></a>名词(10)</h1><ol>
<li>POJO（ Plain Ordinary Java Object） : 在本手册中， POJO 专指只有 setter / getter/ toString 的简单类，包括 DO/DTO/BO/VO 等。</li>
<li>GAV（ GroupId、 ArtifactctId、 Version） : Maven 坐标，是用来唯一标识 jar 包。</li>
<li>OOP（ Object Oriented Programming） : 本手册泛指类、对象的编程处理方式。</li>
<li>ORM（ Object Relation Mapping） : 对象关系映射，对象领域模型与底层数据之间的转换，本文泛指 iBATIS, mybatis 等框架。</li>
<li>NPE（ java.lang.NullPointerException） : 空指针异常。</li>
<li>SOA（ Service-Oriented Architecture） : 面向服务架构，它可以根据需求通过网络对松散耦合的粗粒度应用组件进行分布式部署、组合和使用， 有利于提升组件可重用性，可维护性。</li>
<li>一方库: 本工程内部子项目模块依赖的库（ jar 包） 。</li>
<li>二方库: 公司内部发布到中央仓库，可供公司内部其它应用依赖的库（ jar 包） 。</li>
<li>三方库: 公司之外的开源库（ jar 包） 。</li>
<li>IDE（ Integrated Development Environment） : 用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面等工具， 本《 手册》 泛指 IntelliJ IDEA和 eclipse。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;名词-10&quot;&gt;&lt;a href=&quot;#名词-10&quot; class=&quot;headerlink&quot; title=&quot;名词(10)&quot;&gt;&lt;/a&gt;名词(10)&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;POJO（ Plain Ordinary Java Object） : 在本手册中， POJO 专指
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约(六)-工程结构(3)-服务器.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6(%E5%85%AD)-%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%84(3)-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约(六)-工程结构(3)-服务器/</id>
    <published>2018-02-11T09:59:37.000Z</published>
    <updated>2018-02-12T06:31:01.329Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务器-5"><a href="#服务器-5" class="headerlink" title="服务器(5)"></a>服务器(5)</h1><h2 id="推荐-4"><a href="#推荐-4" class="headerlink" title="推荐(4)"></a>推荐(4)</h2><ol>
<li><p>【推荐】高并发服务器建议调小 TCP 协议的 time_wait 超时时间。</p>
<ul>
<li>说明： 操作系统默认 240 秒后，才会关闭处于 time_wait 状态的连接，在高并发访问下，服务器端会因为处于 time_wait 的连接数太多，可能无法建立新的连接，所以需要在服务器上调小此等待值。</li>
<li>正例： 在 linux 服务器上请通过变更/etc/sysctl.conf 文件去修改该缺省值（ 秒） ：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net.ipv4.tcp_fin_timeout = 30</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>【推荐】调大服务器所支持的最大文件句柄数（ File Descriptor，简写为 fd） 。</p>
<ul>
<li>说明： 主流操作系统的设计是将 TCP/UDP 连接采用与文件一样的方式去管理，即一个连接对应于一个 fd。 主流的 linux 服务器默认所支持最大 fd 数量为 1024，当并发连接数很大时很容易因为 fd 不足而出现“open too many files”错误，导致新的连接无法建立。 建议将 linux服务器所支持的最大句柄数调高数倍（ 与服务器的内存数量相关） 。</li>
</ul>
</li>
<li>【推荐】给JVM 设置-XX:+HeapDumpOnOutOfMemoryError 参数，让 JVM 碰到 OOM 场景时输出dump 信息。<ul>
<li>说明：OOM 的发生是有概率的，甚至有规律地相隔数月才出现一例，出现时的现场信息对查错非常有价值。</li>
</ul>
</li>
<li>【推荐】在线上生产环境， JVM 的 Xms 和 Xmx 设置一样大小的内存容量， 避免在 GC 后调整堆大小带来的压力。</li>
</ol>
<h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考(1)"></a>参考(1)</h2><ol>
<li>【参考】服务器内部重定向使用 forward； 外部重定向地址使用 URL 拼装工具类来生成， 否则会带来 URL 维护不一致的问题和潜在的安全风险。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;服务器-5&quot;&gt;&lt;a href=&quot;#服务器-5&quot; class=&quot;headerlink&quot; title=&quot;服务器(5)&quot;&gt;&lt;/a&gt;服务器(5)&lt;/h1&gt;&lt;h2 id=&quot;推荐-4&quot;&gt;&lt;a href=&quot;#推荐-4&quot; class=&quot;headerlink&quot; title=&quot;推荐(
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约(六)-工程结构(2)-二方库依赖.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6(%E5%85%AD)-%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%84(2)-%E4%BA%8C%E6%96%B9%E5%BA%93%E4%BE%9D%E8%B5%96/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约(六)-工程结构(2)-二方库依赖/</id>
    <published>2018-02-11T09:59:36.000Z</published>
    <updated>2018-02-12T06:31:03.085Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二方库依赖-10"><a href="#二方库依赖-10" class="headerlink" title="二方库依赖(10)"></a>二方库依赖(10)</h1><h2 id="强制-7"><a href="#强制-7" class="headerlink" title="强制(7)"></a>强制(7)</h2><ol>
<li>【强制】定义 GAV 遵从以下规则：<ul>
<li>1） GroupID 格式： com.{公司/BU }.业务线.[子业务线]，最多 4 级。<ul>
<li>说明： {公司/BU} 例如： alibaba/taobao/tmall/aliexpress 等 BU 一级； 子业务线可选。</li>
<li>正例： com.taobao.jstorm 或 com.alibaba.dubbo.register</li>
</ul>
</li>
<li>2） ArtifactID 格式：产品线名-模块名。语义不重复不遗漏，先到中央仓库去查证一下。<ul>
<li>正例： dubbo-client / fastjson-api / jstorm-tool</li>
</ul>
</li>
<li>3） Version：详细规定参考下方。</li>
</ul>
</li>
<li>【强制】二方库版本号命名方式：主版本号.次版本号.修订号<ul>
<li>1） 主版本号： 产品方向改变， 或者大规模 API 不兼容， 或者架构不兼容升级。</li>
<li>2） 次版本号： 保持相对兼容性，增加主要功能特性， 影响范围极小的 API 不兼容修改。</li>
<li>3） 修订号： 保持完全兼容性， 修复 BUG、 新增次要功能特性等。</li>
<li>说明： 注意起始版本号必须为： 1.0.0，而不是 0.0.1 正式发布的类库必须先去中央仓库进行查证，使版本号有延续性， 正式版本号不允许覆盖升级。如当前版本： 1.3.3， 那么下一个合理的版本号： 1.3.4 或 1.4.0 或 2.0.0</li>
</ul>
</li>
<li>【强制】线上应用不要依赖 SNAPSHOT 版本（ 安全包除外） 。<ul>
<li>说明： 不依赖 SNAPSHOT 版本是保证应用发布的幂等性。另外，也可以加快编译时的打包构建。</li>
</ul>
</li>
<li>【强制】二方库的新增或升级，保持除功能点之外的其它 jar 包仲裁结果不变。如果有改变，必须明确评估和验证， 建议进行 dependency:resolve 前后信息比对，如果仲裁结果完全不一致，那么通过 dependency:tree 命令，找出差异点，进行<excludes>排除 jar 包。</excludes></li>
<li>【强制】二方库里可以定义枚举类型，参数可以使用枚举类型，但是接口返回值不允许使用枚举类型或者包含枚举类型的 POJO 对象。</li>
<li>【强制】依赖于一个二方库群时，必须定义一个统一的版本变量，避免版本号不一致。<ul>
<li>说明： 依赖 springframework-core,-context,-beans，它们都是同一个版本，可以定义一个变量来保存版本： ${spring.version}，定义依赖的时候，引用该版本。</li>
</ul>
</li>
<li>【强制】禁止在子项目的 pom 依赖中出现相同的 GroupId，相同的 ArtifactId，但是不同的Version。<ul>
<li>说明： 在本地调试时会使用各子项目指定的版本号，但是合并成一个 war，只能有一个版本号出现在最后的 lib 目录中。 可能出现线下调试是正确的，发布到线上却出故障的问题。</li>
</ul>
</li>
</ol>
<h2 id="推荐-2"><a href="#推荐-2" class="headerlink" title="推荐(2)"></a>推荐(2)</h2><ol>
<li>【推荐】所有 pom 文件中的依赖声明放在<dependencies>语句块中，所有版本仲裁放在<dependencymanagement>语句块中。<ul>
<li>说明： <dependencymanagement>里只是声明版本，并不实现引入，因此子项目需要显式的声明依赖， version 和 scope 都读取自父 pom。而<dependencies>所有声明在主 pom 的<dependencies>里的依赖都会自动引入，并默认被所有的子项目继承。</dependencies></dependencies></dependencymanagement></li>
</ul>
</dependencymanagement></dependencies></li>
<li>【推荐】二方库不要有配置项，最低限度不要再增加配置项。</li>
</ol>
<h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考(1)"></a>参考(1)</h2><ol>
<li>【参考】为避免应用二方库的依赖冲突问题，二方库发布者应当遵循以下原则：<ul>
<li>1） 精简可控原则。移除一切不必要的 API 和依赖，只包含 Service API、必要的领域模型对象、 Utils 类、常量、枚举等。如果依赖其它二方库，尽量是 provided 引入，让二方库使用者去依赖具体版本号； 无 log 具体实现，只依赖日志框架。</li>
<li>2） 稳定可追溯原则。每个版本的变化应该被记录，二方库由谁维护，源码在哪里，都需要能方便查到。除非用户主动升级版本，否则公共二方库的行为不应该发生</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;二方库依赖-10&quot;&gt;&lt;a href=&quot;#二方库依赖-10&quot; class=&quot;headerlink&quot; title=&quot;二方库依赖(10)&quot;&gt;&lt;/a&gt;二方库依赖(10)&lt;/h1&gt;&lt;h2 id=&quot;强制-7&quot;&gt;&lt;a href=&quot;#强制-7&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约(六)-工程结构(1)-应用分层.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6(%E5%85%AD)-%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%84(1)-%E5%BA%94%E7%94%A8%E5%88%86%E5%B1%82/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约(六)-工程结构(1)-应用分层/</id>
    <published>2018-02-11T09:59:35.000Z</published>
    <updated>2019-09-12T08:52:40.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="应用分层-3"><a href="#应用分层-3" class="headerlink" title="应用分层(3)"></a>应用分层(3)</h1><h2 id="强制-1"><a href="#强制-1" class="headerlink" title="强制(1)"></a>强制(1)</h2><ol>
<li><p>【推荐】图中默认上层依赖于下层，箭头关系表示可直接依赖，如：开放接口层可以依赖于Web 层，也可以直接依赖于 Service 层，依此类推：</p>
<p> <img src="http://blogimage.signalfire2017.com/image/work/阿里java规约(六" alt="阿里java规约(六)-工程结构(1)-应用分层-201821116042">工程结构-应用分层201821116042.png)</p>
<ul>
<li>开放接口层：可直接封装 Service 方法暴露成 RPC 接口； 通过 Web 封装成 http 接口； 进行网关安全控制、 流量控制等。</li>
<li>终端显示层：各个端的模板渲染并执行显示的层。 当前主要是 velocity 渲染， JS 渲染，JSP 渲染，移动端展示等。</li>
<li>Web 层：主要是对访问控制进行转发，各类基本参数校验，或者不复用的业务简单处理等。</li>
<li>Service 层：相对具体的业务逻辑服务层。</li>
<li>Manager 层：通用业务处理层，它有如下特征：<ul>
<li>1） 对第三方平台封装的层，预处理返回结果及转化异常信息；</li>
<li>2） 对 Service 层通用能力的下沉，如缓存方案、 中间件通用处理；</li>
<li>3） 与 DAO 层交互，对多个 DAO 的组合复用。</li>
</ul>
</li>
<li>DAO 层：数据访问层，与底层 MySQL、 Oracle、 Hbase 等进行数据交互。</li>
<li>外部接口或第三方平台：包括其它部门 RPC 开放接口，基础平台，其它公司的 HTTP 接口。</li>
</ul>
</li>
</ol>
<h2 id="参考-2"><a href="#参考-2" class="headerlink" title="参考(2)"></a>参考(2)</h2><ol>
<li>【参考】 （ 分层异常处理规约） 在 DAO 层，产生的异常类型有很多，无法用细粒度的异常进行 catch，使用 catch(Exception e)方式，并 throw new DAOException(e)，不需要打印日志，因为日志在 Manager/Service 层一定需要捕获并打印到日志文件中去，如果同台服务器再打日志，浪费性能和存储。在 Service 层出现异常时，必须记录出错日志到磁盘，尽可能带上参数信息，相当于保护案发现场。如果 Manager 层与 Service 同机部署，日志方式与 DAO层处理一致，如果是单独部署，则采用与 Service 一致的处理方式。 Web 层绝不应该继续往上抛异常，因为已经处于顶层，如果意识到这个异常将导致页面无法正常渲染，那么就应该直接跳转到友好错误页面， 加上用户容易理解的错误提示信息。开放接口层要将异常处理成错误码和错误信息方式返回。</li>
<li>【参考】分层领域模型规约：<ul>
<li>DO（ Data Object） ：与数据库表结构一一对应，通过 DAO 层向上传输数据源对象。</li>
<li>DTO（ Data Transfer Object） ：数据传输对象， Service 或 Manager 向外传输的对象。</li>
<li>BO（ Business Object） ：业务对象。 由 Service 层输出的封装业务逻辑的对象。</li>
<li>AO（ Application Object）： 应用对象。 在 Web 层与 Service 层之间抽象的复用对象模型，极为贴近展示层，复用度不高。</li>
<li>VO（ View Object） ： 显示层对象，通常是 Web 向模板渲染引擎层传输的对象。</li>
<li>Query：数据查询对象，各层接收上层的查询请求。 注意超过 2 个参数的查询封装，禁止使用 Map 类来传输。</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;应用分层-3&quot;&gt;&lt;a href=&quot;#应用分层-3&quot; class=&quot;headerlink&quot; title=&quot;应用分层(3)&quot;&gt;&lt;/a&gt;应用分层(3)&lt;/h1&gt;&lt;h2 id=&quot;强制-1&quot;&gt;&lt;a href=&quot;#强制-1&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约(五)-MySQL数据库(4)-ORM映射.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6(%E4%BA%94)-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93(4)-ORM%E6%98%A0%E5%B0%84/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约(五)-MySQL数据库(4)-ORM映射/</id>
    <published>2018-02-11T09:59:34.000Z</published>
    <updated>2018-02-12T06:31:04.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ORM映射-11"><a href="#ORM映射-11" class="headerlink" title="ORM映射(11)"></a>ORM映射(11)</h1><h2 id="强制-4"><a href="#强制-4" class="headerlink" title="强制(4)"></a>强制(4)</h2><ol>
<li>【强制】在表查询中，一律不要使用 * 作为查询的字段列表，需要哪些字段必须明确写明。<ul>
<li>说明：<ul>
<li>1） 增加查询分析器解析成本。</li>
<li>2） 增减字段容易与 resultMap 配置不一致。</li>
</ul>
</li>
</ul>
</li>
<li>【强制】 POJO 类的布尔属性不能加 is，而数据库字段必须加 is_，要求在 resultMap 中进行字段与属性之间的映射。<ul>
<li>说明： 参见定义 POJO 类以及数据库字段定义规定，在<resultmap>中增加映射，是必须的。在 MyBatis Generator 生成的代码中，需要进行对应的修改。</resultmap></li>
</ul>
</li>
<li>【强制】不要用 resultClass 当返回参数，即使所有类属性名与数据库字段一一对应，也需要定义； 反过来，每一个表也必然有一个与之对应。<ul>
<li>说明： 配置映射关系，使字段与 DO 类解耦，方便维护。</li>
</ul>
</li>
<li>【强制】sql.xml 配置参数使用： #{}， #param# 不要使用${} 此种方式容易出现 SQL 注入。</li>
<li><p>【强制】 iBATIS 自带的 queryForList(String statementName,int start,int size)不推荐使用。</p>
<ul>
<li>说明：其实现方式是在数据库取到 statementName对应的SQL语句的所有记录，再通过 subList取 start,size 的子集合。</li>
<li>正例：   <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">map.put(<span class="string">"start"</span>, start);</div><div class="line">map.put(<span class="string">"size"</span>, size);</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>【强制】不允许直接拿 HashMap 与 Hashtable 作为查询结果集的输出。</p>
<ul>
<li>说明： resultClass=”Hashtable”， 会置入字段名和属性值，但是值的类型不可控。</li>
</ul>
</li>
<li>【强制】更新数据表记录时，必须同时更新记录对应的 gmt_modified 字段值为当前时间。</li>
</ol>
<h2 id="推荐-1"><a href="#推荐-1" class="headerlink" title="推荐(1)"></a>推荐(1)</h2><ol>
<li>【推荐】不要写一个大而全的数据更新接口。 传入为 POJO 类，不管是不是自己的目标更新字段，都进行 update table set c1=value1,c2=value2,c3=value3; 这是不对的。执行 SQL时， 不要更新无改动的字段，一是易出错； 二是效率低； 三是增加 binlog 存储。</li>
</ol>
<h2 id="参考-2"><a href="#参考-2" class="headerlink" title="参考(2)"></a>参考(2)</h2><ol>
<li>【参考】 @Transactional 事务不要滥用。事务会影响数据库的 QPS，另外使用事务的地方需要考虑各方面的回滚方案，包括缓存回滚、搜索引擎回滚、消息补偿、统计修正等。</li>
<li>【参考】 <isequal>中的 compareValue 是与属性值对比的常量，一般是数字，表示相等时带上此条件； <isnotempty>表示不为空且不为 null 时执行； <isnotnull>表示不为 null 值时执行。</isnotnull></isnotempty></isequal></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ORM映射-11&quot;&gt;&lt;a href=&quot;#ORM映射-11&quot; class=&quot;headerlink&quot; title=&quot;ORM映射(11)&quot;&gt;&lt;/a&gt;ORM映射(11)&lt;/h1&gt;&lt;h2 id=&quot;强制-4&quot;&gt;&lt;a href=&quot;#强制-4&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约(五)-MySQL数据库(3)-SQL语句.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6(%E4%BA%94)-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93(3)-SQL%E8%AF%AD%E5%8F%A5/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约(五)-MySQL数据库(3)-SQL语句/</id>
    <published>2018-02-11T09:59:33.000Z</published>
    <updated>2018-02-12T06:31:05.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="索引规约-11"><a href="#索引规约-11" class="headerlink" title="索引规约(11)"></a>索引规约(11)</h1><h2 id="强制-4"><a href="#强制-4" class="headerlink" title="强制(4)"></a>强制(4)</h2><ol>
<li>【强制】业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引。<ul>
<li>说明： 不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的； 另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。</li>
</ul>
</li>
<li>【强制】超过三个表禁止 join。需要 join 的字段，数据类型必须绝对一致； 多表关联查询时，保证被关联的字段需要有索引。<ul>
<li>说明： 即使双表 join 也要注意表索引、 SQL 性能。</li>
</ul>
</li>
<li>【强制】在 varchar 字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度即可。<ul>
<li>说明： 索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分度会高达 90%以上，可以使用 count(distinct left(列名, 索引长度))/count(*)的区分度来确定。</li>
</ul>
</li>
<li>【强制】页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。<ul>
<li>说明： 索引文件具有 B-Tree 的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索引。</li>
</ul>
</li>
</ol>
<h2 id="推荐-6"><a href="#推荐-6" class="headerlink" title="推荐(6)"></a>推荐(6)</h2><ol>
<li>【推荐】如果有 order by 的场景，请注意利用索引的有序性。 order by 最后的字段是组合索引的一部分，并且放在索引组合顺序的最后，避免出现 file_sort 的情况，影响查询性能。<ul>
<li>正例： where a=? and b=? order by c; 索引： a_b_c</li>
<li>反例： 索引中有范围查找，那么索引有序性无法利用，如： WHERE a&gt;10 ORDER BY b; 索引a_b 无法排序。</li>
</ul>
</li>
<li>【推荐】利用覆盖索引来进行查询操作， 避免回表。<ul>
<li>说明： 如果一本书需要知道第 11 章是什么标题，会翻开第 11 章对应的那一页吗？目录浏览一下就好，这个目录就是起到覆盖索引的作用。</li>
<li>正例： 能够建立索引的种类分为主键索引、唯一索引、普通索引三种，而覆盖索引只是一种查询的一种效果，用 explain 的结果， extra 列会出现： using index。</li>
</ul>
</li>
<li><p>【推荐】利用延迟关联或者子查询优化超多分页场景。</p>
<ul>
<li>说明： MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后返回放弃前 offset 行，返回N 行，那当 offset 特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行 SQL 改写。</li>
<li>正例： 先快速定位需要获取的 id 段，然后再关联：  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> a.* <span class="keyword">FROM</span> 表 <span class="number">1</span> a, (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> 表 <span class="number">1</span> <span class="keyword">where</span> 条件 <span class="keyword">LIMIT</span> <span class="number">100000</span>,<span class="number">20</span> ) b <span class="keyword">where</span> a.id=b.id</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>【推荐】 SQL 性能优化的目标：至少要达到 range 级别， 要求是 ref 级别， 如果可以是 consts最好。</p>
<ul>
<li>说明：<ul>
<li>1） consts 单表中最多只有一个匹配行（ 主键或者唯一索引） ，在优化阶段即可读取到数据。</li>
<li>2） ref 指的是使用普通的索引（ normal index） 。</li>
<li>3） range 对索引进行范围检索。</li>
</ul>
</li>
<li>反例： explain 表的结果， type=index，索引物理文件全扫描，速度非常慢，这个 index 级别比较 range 还低，与全表扫描是小巫见大巫。</li>
</ul>
</li>
<li>【推荐】建组合索引的时候，区分度最高的在最左边。<ul>
<li>正例： 如果 where a=? and b=? ， a 列的几乎接近于唯一值，那么只需要单建 idx_a 索引即可。</li>
<li>说明： 存在非等号和等号混合判断条件时，在建索引时，请把等号条件的列前置。如： where a&gt;? and b=? 那么即使 a 的区分度更高，也必须把 b 放在索引的最前列。</li>
</ul>
</li>
<li>【推荐】 防止因字段类型不同造成的隐式转换， 导致索引失效。</li>
<li>【参考】创建索引时避免有如下极端误解：<ul>
<li>1） 宁滥勿缺。 认为一个查询就需要建一个索引。</li>
<li>2） 宁缺勿滥。 认为索引会消耗空间、严重拖慢更新和新增速度。</li>
<li>3） 抵制惟一索引。 认为业务的惟一性一律需要在应用层通过“先查后插”方式解决。</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;索引规约-11&quot;&gt;&lt;a href=&quot;#索引规约-11&quot; class=&quot;headerlink&quot; title=&quot;索引规约(11)&quot;&gt;&lt;/a&gt;索引规约(11)&lt;/h1&gt;&lt;h2 id=&quot;强制-4&quot;&gt;&lt;a href=&quot;#强制-4&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约(五)-MySQL数据库(2)-索引规约.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6(%E4%BA%94)-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93(2)-%E7%B4%A2%E5%BC%95%E8%A7%84%E7%BA%A6/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约(五)-MySQL数据库(2)-索引规约/</id>
    <published>2018-02-11T09:49:33.000Z</published>
    <updated>2018-02-11T05:45:31.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="索引规约-11"><a href="#索引规约-11" class="headerlink" title="索引规约(11)"></a>索引规约(11)</h1><h2 id="强制-4"><a href="#强制-4" class="headerlink" title="强制(4)"></a>强制(4)</h2><ol>
<li>【强制】业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引。<ul>
<li>说明： 不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的； 另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。</li>
</ul>
</li>
<li>【强制】超过三个表禁止 join。需要 join 的字段，数据类型必须绝对一致； 多表关联查询时，保证被关联的字段需要有索引。<ul>
<li>说明： 即使双表 join 也要注意表索引、 SQL 性能。</li>
</ul>
</li>
<li>【强制】在 varchar 字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度即可。<ul>
<li>说明： 索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分度会高达 90%以上，可以使用 count(distinct left(列名, 索引长度))/count(*)的区分度来确定。</li>
</ul>
</li>
<li>【强制】页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。<ul>
<li>说明： 索引文件具有 B-Tree 的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索引。</li>
</ul>
</li>
</ol>
<h2 id="推荐-6"><a href="#推荐-6" class="headerlink" title="推荐(6)"></a>推荐(6)</h2><ol>
<li>【推荐】如果有 order by 的场景，请注意利用索引的有序性。 order by 最后的字段是组合索引的一部分，并且放在索引组合顺序的最后，避免出现 file_sort 的情况，影响查询性能。<ul>
<li>正例： where a=? and b=? order by c; 索引： a_b_c</li>
<li>反例： 索引中有范围查找，那么索引有序性无法利用，如： WHERE a&gt;10 ORDER BY b; 索引a_b 无法排序。</li>
</ul>
</li>
<li>【推荐】利用覆盖索引来进行查询操作， 避免回表。<ul>
<li>说明： 如果一本书需要知道第 11 章是什么标题，会翻开第 11 章对应的那一页吗？目录浏览一下就好，这个目录就是起到覆盖索引的作用。</li>
<li>正例： 能够建立索引的种类分为主键索引、唯一索引、普通索引三种，而覆盖索引只是一种查询的一种效果，用 explain 的结果， extra 列会出现： using index。</li>
</ul>
</li>
<li><p>【推荐】利用延迟关联或者子查询优化超多分页场景。</p>
<ul>
<li>说明： MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后返回放弃前 offset 行，返回N 行，那当 offset 特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行 SQL 改写。</li>
<li>正例： 先快速定位需要获取的 id 段，然后再关联：  <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> a.* <span class="keyword">FROM</span> 表 <span class="number">1</span> a, (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> 表 <span class="number">1</span> <span class="keyword">where</span> 条件 <span class="keyword">LIMIT</span> <span class="number">100000</span>,<span class="number">20</span> ) b <span class="keyword">where</span> a.id=b.id</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>【推荐】 SQL 性能优化的目标：至少要达到 range 级别， 要求是 ref 级别， 如果可以是 consts最好。</p>
<ul>
<li>说明：<ul>
<li>1） consts 单表中最多只有一个匹配行（ 主键或者唯一索引） ，在优化阶段即可读取到数据。</li>
<li>2） ref 指的是使用普通的索引（ normal index） 。</li>
<li>3） range 对索引进行范围检索。</li>
</ul>
</li>
<li>反例： explain 表的结果， type=index，索引物理文件全扫描，速度非常慢，这个 index 级别比较 range 还低，与全表扫描是小巫见大巫。</li>
</ul>
</li>
<li>【推荐】建组合索引的时候，区分度最高的在最左边。<ul>
<li>正例： 如果 where a=? and b=? ， a 列的几乎接近于唯一值，那么只需要单建 idx_a 索引即可。</li>
<li>说明： 存在非等号和等号混合判断条件时，在建索引时，请把等号条件的列前置。如： where a&gt;? and b=? 那么即使 a 的区分度更高，也必须把 b 放在索引的最前列。</li>
</ul>
</li>
<li>【推荐】 防止因字段类型不同造成的隐式转换， 导致索引失效。</li>
<li>【参考】创建索引时避免有如下极端误解：<ul>
<li>1） 宁滥勿缺。 认为一个查询就需要建一个索引。</li>
<li>2） 宁缺勿滥。 认为索引会消耗空间、严重拖慢更新和新增速度。</li>
<li>3） 抵制惟一索引。 认为业务的惟一性一律需要在应用层通过“先查后插”方式解决。</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;索引规约-11&quot;&gt;&lt;a href=&quot;#索引规约-11&quot; class=&quot;headerlink&quot; title=&quot;索引规约(11)&quot;&gt;&lt;/a&gt;索引规约(11)&lt;/h1&gt;&lt;h2 id=&quot;强制-4&quot;&gt;&lt;a href=&quot;#强制-4&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约(五)-MySQL数据库(1)-建表规约.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6(%E4%BA%94)-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93(1)-%E5%BB%BA%E8%A1%A8%E8%A7%84%E7%BA%A6/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约(五)-MySQL数据库(1)-建表规约/</id>
    <published>2018-02-11T09:39:33.000Z</published>
    <updated>2018-02-11T02:30:27.344Z</updated>
    
    <content type="html"><![CDATA[<h1 id="建表规约-15"><a href="#建表规约-15" class="headerlink" title="建表规约(15)"></a>建表规约(15)</h1><h2 id="强制-9"><a href="#强制-9" class="headerlink" title="强制(9)"></a>强制(9)</h2><ol>
<li>【强制】表达<code>是与否</code>概念的字段，必须使用 <code>is_xxx</code> 的方式命名，数据类型是 <code>unsigned tinyint</code>（1 表示是， 0 表示否） 。<ul>
<li>说明： 任何字段如果为非负数，必须是 unsigned。</li>
<li>正例： 表达逻辑删除的字段名 is_deleted， 1 表示删除， 0 表示未删除。</li>
</ul>
</li>
<li>【强制】表名、字段名必须使用<code>小写字母或数字</code>， <code>禁止出现数字开头</code>，<code>禁止两个下划线中间只出现数字</code>。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。<ul>
<li>说明： MySQL 在 Windows 下不区分大小写，但在 Linux 下默认是区分大小写。因此，数据库名、表名、字段名，都不允许出现任何大写字母，避免节外生枝。</li>
<li>正例： aliyun_admin， rdc_config， level3_name</li>
<li>反例： AliyunAdmin， rdcConfig， level_3_name</li>
</ul>
</li>
<li>【强制】表名不使用复数名词。<ul>
<li>说明： 表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于 DO 类名也是单数形式，符合表达习惯。</li>
</ul>
</li>
<li>【强制】禁用保留字，如 desc、 range、 match、 delayed 等， 请参考 MySQL 官方保留字。</li>
<li>【强制】 <code>主键索引</code>名为 <code>pk_字段名</code>； <code>唯一索引名</code>为 <code>uk_字段名</code>； <code>普通索引</code>名则为 <code>idx_字段名</code>。<ul>
<li>说明： pk<em> 即 primary key； uk</em> 即 unique key； idx_ 即 index 的简称。</li>
</ul>
</li>
<li>【强制】小数类型为 decimal，禁止使用 float 和 double。<ul>
<li>说明： float 和 double 在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数分开存储。</li>
</ul>
</li>
<li>【强制】如果存储的字符串长度几乎相等，使用 char 定长字符串类型。</li>
<li>【强制】 varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。</li>
<li>【强制】表必备三字段： id, gmt_create, gmt_modified。<ul>
<li>说明： 其中 id 必为主键，类型为 unsigned bigint、单表时自增、步长为 1。 gmt_create,gmt_modified 的类型均为 datetime 类型，前者现在时表示主动创建，后者过去分词表示被动更新。</li>
</ul>
</li>
<li>【推荐】表的命名最好是加上“业务名称_表的作用”。<ul>
<li>正例： alipay_task / force_project / trade_config</li>
</ul>
</li>
</ol>
<h2 id="推荐-4"><a href="#推荐-4" class="headerlink" title="推荐(4)"></a>推荐(4)</h2><ol>
<li>【推荐】库名与应用名称尽量一致。</li>
<li>【推荐】如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。</li>
<li>【推荐】字段允许适当冗余，以提高查询性能，但必须考虑数据一致。冗余字段应遵循：<ul>
<li>1） 不是频繁修改的字段。</li>
<li>2） 不是 varchar 超长字段，更不能是 text 字段。</li>
<li>正例： 商品类目名称使用频率高， 字段长度短，名称基本一成不变， 可在相关联的表中冗余存储类目名称，避免关联查询。</li>
</ul>
</li>
<li>【推荐】单表行数超过 500 万行或者单表容量超过 2GB，才推荐进行分库分表。<ul>
<li>说明： 如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。</li>
</ul>
</li>
</ol>
<h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考(1)"></a>参考(1)</h2><ol>
<li><p>【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。<br>正例： 如下表，其中无符号值可以避免误存负数， 且扩大了表示范围。</p>
<p>对象 | 年龄区间 | 类型 | 字节 | 表示范围<br>—|——|—-|—-|—–<br>人 | 150 岁之内 | unsigned tinyint | 1 | 无符号值： 0 到 255<br>龟 | 数百岁 | unsigned smallint | 2 | 无符号值： 0 到 65535<br>恐龙化石 | 数千万年 | unsigned int | 4 | 无符号值： 0 到约 42.9 亿<br>太阳 | 约 50 亿年 | unsigned bigint | 8 | 无符号值： 0 到约 10 的 19 次方</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;建表规约-15&quot;&gt;&lt;a href=&quot;#建表规约-15&quot; class=&quot;headerlink&quot; title=&quot;建表规约(15)&quot;&gt;&lt;/a&gt;建表规约(15)&lt;/h1&gt;&lt;h2 id=&quot;强制-9&quot;&gt;&lt;a href=&quot;#强制-9&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里java规约(四)-安全规约.md</title>
    <link href="https://blog.signalfire2017.com/2018/02/11/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6(%E5%9B%9B)-%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6/"/>
    <id>https://blog.signalfire2017.com/2018/02/11/阿里java规约/阿里java规约(四)-安全规约/</id>
    <published>2018-02-11T09:29:33.000Z</published>
    <updated>2018-02-11T02:15:54.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安全规约-8"><a href="#安全规约-8" class="headerlink" title="安全规约(8)"></a>安全规约(8)</h1><h2 id="强制-7"><a href="#强制-7" class="headerlink" title="强制(7)"></a>强制(7)</h2><ol>
<li>【强制】 隶属于用户个人的页面或者功能必须进行权限控制校验。<ul>
<li>说明： 防止没有做水平权限校验就可随意访问、 修改、删除别人的数据，比如查看他人的私信内容、修改他人的订单。</li>
</ul>
</li>
<li>【强制】用户敏感数据禁止直接展示，必须对展示数据进行脱敏。<ul>
<li>说明： 个人手机号码显示为:158<em>**</em>9119，隐藏中间 4 位，防止隐私泄露。</li>
</ul>
</li>
<li>【强制】用户输入的 SQL 参数严格使用参数绑定或者 METADATA 字段值限定，防止 SQL 注入，禁止字符串拼接 SQL 访问数据库。</li>
<li>【强制】用户请求传入的任何参数必须做有效性验证。<ul>
<li>说明： 忽略参数校验可能导致：</li>
<li>page size 过大导致内存溢出</li>
<li>恶意 order by 导致数据库慢查询</li>
<li>任意重定向</li>
<li>SQL 注入</li>
<li>反序列化注入</li>
<li>正则输入源串拒绝服务 ReDoS<ul>
<li>说明： Java 代码用正则来验证客户端的输入，有些正则写法验证普通用户输入没有问题，但是如果攻击人员使用的是特殊构造的字符串来验证，有可能导致死循环的结果。</li>
</ul>
</li>
</ul>
</li>
<li>【强制】禁止向 HTML 页面输出未经安全过滤或未正确转义的用户数据。</li>
<li>【强制】表单、 AJAX 提交必须执行 CSRF 安全过滤。<ul>
<li>说明： CSRF(Cross-site request forgery)跨站请求伪造是一类常见编程漏洞。对于存在CSRF 漏洞的应用/网站，攻击者可以事先构造好 URL，只要受害者用户一访问，后台便在用户不知情情况下对数据库中用户参数进行相应修改。</li>
</ul>
</li>
<li>【强制】在使用平台资源，譬如短信、邮件、电话、下单、支付，必须实现正确的防重放限制，如数量限制、疲劳度控制、验证码校验，避免被滥刷导致资损。<ul>
<li>说明： 如注册时发送验证码到手机，如果没有限制次数和频率，那么可以利用此功能骚扰到其它用户，并造成短信平台资源浪费。</li>
</ul>
</li>
</ol>
<h2 id="推荐-1"><a href="#推荐-1" class="headerlink" title="推荐(1)"></a>推荐(1)</h2><ol>
<li>【推荐】发贴、评论、发送即时消息等用户生成内容的场景必须实现防刷、文本内容违禁词过滤等风控策略。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安全规约-8&quot;&gt;&lt;a href=&quot;#安全规约-8&quot; class=&quot;headerlink&quot; title=&quot;安全规约(8)&quot;&gt;&lt;/a&gt;安全规约(8)&lt;/h1&gt;&lt;h2 id=&quot;强制-7&quot;&gt;&lt;a href=&quot;#强制-7&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/categories/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
    
      <category term="阿里java规约" scheme="https://blog.signalfire2017.com/tags/%E9%98%BF%E9%87%8Cjava%E8%A7%84%E7%BA%A6/"/>
    
  </entry>
  
</feed>
